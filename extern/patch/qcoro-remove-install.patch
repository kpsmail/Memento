diff --git a/CMakeLists.txt b/CMakeLists.txt
index e03c729..5d78eec 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -178,38 +178,6 @@ if (QCORO_BUILD_TESTING)
     add_subdirectory(tests)
 endif()
 
-#-----------------------------------------------------------#
-# Installation
-#-----------------------------------------------------------#
-
-include(CMakePackageConfigHelpers)
-
-install(FILES
-    ${CMAKE_CURRENT_BINARY_DIR}/config.h
-    DESTINATION ${QCORO_INSTALL_INCLUDEDIR}/qcoro
-    COMPONENT Devel
-)
-
-configure_package_config_file(
-    "${CMAKE_CURRENT_SOURCE_DIR}/QCoroConfig.cmake.in"
-    "${CMAKE_CURRENT_BINARY_DIR}/QCoro${QT_VERSION_MAJOR}Config.cmake"
-    INSTALL_DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/QCoro${QT_VERSION_MAJOR}"
-    PATH_VARS CMAKE_INSTALL_INCLUDEDIR
-)
-
-write_basic_package_version_file(
-    "${CMAKE_CURRENT_BINARY_DIR}/QCoro${QT_VERSION_MAJOR}ConfigVersion.cmake"
-    VERSION ${qcoro_VERSION}
-    COMPATIBILITY SameMajorVersion
-)
-
-install(
-    FILES "${CMAKE_CURRENT_BINARY_DIR}/QCoro${QT_VERSION_MAJOR}Config.cmake"
-          "${CMAKE_CURRENT_BINARY_DIR}/QCoro${QT_VERSION_MAJOR}ConfigVersion.cmake"
-    DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/QCoro${QT_VERSION_MAJOR}"
-    COMPONENT Devel
-)
-
 #-----------------------------------------------------------#
 # Summary
 #-----------------------------------------------------------#
diff --git a/cmake/AddQCoroLibrary.cmake b/cmake/AddQCoroLibrary.cmake
index 3aa63e9..71ff76c 100644
--- a/cmake/AddQCoroLibrary.cmake
+++ b/cmake/AddQCoroLibrary.cmake
@@ -17,7 +17,7 @@ function(set_target_defaults target_name)
     endif()
 
     target_compile_definitions(${target_name} PRIVATE ${DEFAULT_QT_DEFINITIONS})
-    
+
     if (NOT WIN32)
         # strict iterators on MSVC only work when Qt itself is also built with them,
         # which is not usually the case. Otherwise there are linking issues.
@@ -144,7 +144,7 @@ function(add_qcoro_library)
     )
 
     set_target_defaults(${target_name})
-    
+
     if (NOT LIB_INTERFACE)
         set_target_properties(
             ${target_name}
@@ -210,52 +210,4 @@ function(add_qcoro_library)
         INCLUDE_INSTALL_DIRS ${QCORO_INSTALL_INCLUDEDIR}/qcoro;${QCORO_INSTALL_INCLUDEDIR}/QCoro
         DEPS "${qmake_qt_deps} ${qmake_qcoro_deps}"
     )
-
-    install(
-        TARGETS ${target_name}
-        EXPORT ${target_name}Targets
-    )
-    install(
-        FILES ${source_HEADERS}
-        DESTINATION ${QCORO_INSTALL_INCLUDEDIR}/qcoro/
-        COMPONENT Devel
-    )
-    foreach(lib_header ${LIB_HEADERS})
-        get_filename_component(header_prefix_dir ${lib_header} DIRECTORY)
-        install(
-            FILES ${lib_header}
-            DESTINATION ${QCORO_INSTALL_INCLUDEDIR}/qcoro/${header_prefix_dir}
-            COMPONENT Devel
-        )
-    endforeach()
-    install(
-        FILES ${camelcase_HEADERS}
-        DESTINATION ${QCORO_INSTALL_INCLUDEDIR}/QCoro/
-        COMPONENT Devel
-    )
-    if (NOT LIB_INTERFACE)
-        install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${export_file}_export.h
-                DESTINATION ${QCORO_INSTALL_INCLUDEDIR}/qcoro
-                COMPONENT Devel
-        )
-    endif()
-
-    install(
-        FILES "${CMAKE_CURRENT_BINARY_DIR}/${target_name}Config.cmake"
-              "${CMAKE_CURRENT_BINARY_DIR}/${target_name}ConfigVersion.cmake"
-        DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${target_name}"
-        COMPONENT Devel
-    )
-    install(
-        EXPORT ${target_name}Targets
-        DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${target_name}"
-        FILE "${target_name}Targets.cmake"
-        NAMESPACE ${QCORO_TARGET_PREFIX}::
-        COMPONENT Devel
-    )
-    install(
-        FILES "${CMAKE_CURRENT_BINARY_DIR}/qt_QCoro${LIB_NAME}.pri"
-        DESTINATION "${ECM_MKSPECS_INSTALL_DIR}"
-        COMPONENT Devel
-    )
 endfunction()
diff --git a/qcoro/CMakeLists.txt b/qcoro/CMakeLists.txt
index 9a0a6d9..b8adcd6 100644
--- a/qcoro/CMakeLists.txt
+++ b/qcoro/CMakeLists.txt
@@ -38,28 +38,6 @@ add_qcoro_library(
         INTERFACE Core
 )
 
-if (NOT QCORO_DISABLE_DEPRECATED_TASK_H)
-    # Install Task conditionally
-    generate_headers(
-        task_cc_HEADERS
-        HEADER_NAMES Task
-        OUTPUT_DIR QCoro
-        ORIGINAL_HEADERS_VAR task_lc_HEADERS
-    )
-
-    install(
-        FILES ${task_lc_HEADERS}
-        DESTINATION ${QCORO_INSTALL_INCLUDEDIR}/qcoro/
-        COMPONENT Devel
-    )
-    install(
-        FILES ${task_cc_HEADERS}
-        DESTINATION ${QCORO_INSTALL_INCLUDEDIR}/QCoro/
-        COMPONENT Devel
-    )
-endif()
-
-
 # The QCoroCoroConfig includes the QCoroMacros.cmake so we can't
 # use the standard file generated by add_qcoro_library.
 configure_package_config_file(
@@ -75,12 +53,6 @@ write_basic_package_version_file(
     COMPATIBILITY SameMajorVersion
 )
 
-# Install the extra macros file
-install(
-    FILES "QCoroMacros.cmake"
-    DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${QCORO_TARGET_PREFIX}Coro/"
-)
-
 ############################
 
 add_subdirectory(core)
